struct String {
   pointer: &u8,
   length: usize,
}

proc text(txt: String, x: u32, y: u32) {
   textUtf8(txt.pointer, txt.length, x, y);
}

proc trace(txt: String) {
   traceUtf8(txt.pointer, txt.length);
}

func count_digits(value: u32) -> u8 {
   let digit_count: u8 = 0;

   loop {
      if value <= 9 {
         return digit_count + 1;
      }

      digit_count = digit_count + 1;
      value = value / 10;
   }

   return 0;
}


proc int_to_string(value: u32, buf: &[u8; 10]) -> String {
   let total_len = count_digits(value) extend usize;
   let next_digit: u8 = 0;
   let i: usize = 0;

   loop {
      if value <= 9 {
         next_digit = value truncate u8;
         (*buf)[total_len - i - 1] = next_digit + 48;
         i = i + 1;
         break;
      }
      next_digit = (value % 10) truncate u8;
      value = value / 10;
      (*buf)[total_len - i - 1] = next_digit + 48;
      i = i + 1;
   }

   return String {
      length: i,
      pointer: &(*buf)[0],
   };
}

// This should not be necessary, but sometimes life be like that
proc set_wasm4_statics() {
   PALETTE = 0x04 transmute &[u32; 4];
   DRAW_COLORS = 0x14 transmute &u16;
   GAMEPADS = 0x16 transmute &[u8; 4];
   MOUSE_X = 0x1a transmute &i16;
   MOUSE_Y = 0x1c transmute &i16;
   MOUSE_BUTTONS = 0x1e transmute &u8;
   FRAMEBUFFER = 0xa0 transmute &[u8; 6400];

   BUTTON_1 = 1;
   BUTTON_2 = 2;
   BUTTON_LEFT = 16;
   BUTTON_RIGHT = 32;
   BUTTON_UP = 64;
   BUTTON_DOWN = 128;

   BLIT_2BPP = 1;
   BLIT_1BPP = 0;
   BLIT_FLIP_X = 2;
   BLIT_FLIP_Y = 4;
   BLIT_ROTATE = 8;

   TONE_PULSE1 = 0;
   TONE_PULSE2 = 1;
   TONE_TRIANGLE = 2;
   TONE_NOISE = 3;
   TONE_MODE1 = 0;
   TONE_MODE2 = 4;
   TONE_MODE3 = 8;
   TONE_MODE4 = 12;
}

static PALETTE: &[u32; 4];
static DRAW_COLORS: &u16;
static GAMEPADS: &[u8; 4];
static MOUSE_X: &i16;
static MOUSE_Y: &i16;
static MOUSE_BUTTONS: &u8;
static FRAMEBUFFER: &[u8; 6400];

static BUTTON_1: u8;
static BUTTON_2: u8;
static BUTTON_LEFT: u8;
static BUTTON_RIGHT: u8;
static BUTTON_UP: u8;
static BUTTON_DOWN: u8;

static BLIT_2BPP: u32;
static BLIT_1BPP: u32;
static BLIT_FLIP_X: u32;
static BLIT_FLIP_Y: u32;
static BLIT_ROTATE: u32;

static TONE_PULSE1: u32;
static TONE_PULSE2: u32;
static TONE_TRIANGLE: u32;
static TONE_NOISE: u32;
static TONE_MODE1: u32;
static TONE_MODE2: u32;
static TONE_MODE3: u32;
static TONE_MODE4: u32;
